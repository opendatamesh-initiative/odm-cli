package org.opendatamesh.cli.usecases.importer;

import org.opendatamesh.cli.extensions.ExtensionInfo;
import org.opendatamesh.cli.extensions.ExtensionOption;
import org.opendatamesh.cli.extensions.importer.ImporterArguments;
import org.opendatamesh.cli.extensions.importer.ImporterExtension;
import org.opendatamesh.dpds.model.DataProductVersion;
import org.opendatamesh.dpds.model.info.Info;
import org.opendatamesh.dpds.model.info.Owner;

import com.fasterxml.jackson.databind.node.NullNode;

import java.util.List;
import java.util.Map;

public class EmptySerializationExtensionMock implements ImporterExtension<DataProductVersion> {

    @Override
    public List<ExtensionOption> getExtensionOptions() {
        return List.of();
    }

    @Override
    public ExtensionInfo getExtensionInfo() {
        return new ExtensionInfo.Builder()
                .description("Descriptor starter extension")
                .build();
    }

    @Override
    public boolean supports(String from, String to) {
        return "descriptor".equals(to) && "starter".equals(from);
    }

    @Override
    public DataProductVersion importElement(DataProductVersion dataProductVersion, ImporterArguments importerArguments) {
        dataProductVersion = dataProductVersion != null ? dataProductVersion : new DataProductVersion();
        Info info = new Info();
        info.setName("ImportDescriptorStarter");
        info.setVersion("1.0.0");
        info.setDescription("Generated by odm-cli-extensions-starter");

        info.setContactPoints(List.of());

        Owner owner = new Owner();
        owner.setId("");
        info.setOwner(owner);

        info.setAdditionalProperties(Map.of("x-associatedTeam", NullNode.getInstance()));

        dataProductVersion.setInfo(info);
        return dataProductVersion;
    }

    @Override
    public Class<DataProductVersion> getTargetClass() {
        return null;
    }
}
