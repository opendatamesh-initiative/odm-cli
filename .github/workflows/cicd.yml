name: odm-cli CI/CD

on:
  release:
    types: [ created ]

jobs:
  verify-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Set up Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
            <servers>
              <server>
                <id>odm-spec-parser-repo</id>
                <username>your-github-username</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
              <server>
                <id>odm-cli-extensions-repo</id>
                <username>your-github-username</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>" > ~/.m2/settings.xml
      - name: Get Git Tag
        run: |
          TAG_VERSION=$(echo "${{ github.ref_name }}" | sed 's/[^0-9.]//g')
          echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
      - name: Get Maven Version
        run: |
          MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "MAVEN_VERSION=${MAVEN_VERSION}" >> $GITHUB_ENV
      - name: Check Tag and Version Match
        run: |
          if [ "${{ env.TAG_VERSION }}" != "${{ env.MAVEN_VERSION }}" ]; then
            echo "Git tag (${{ env.TAG_VERSION }}) does not match POM version (${{ env.MAVEN_VERSION }})"
            exit 1
          fi
      - name: Execute tests with Maven
        run: mvn -B test

  build-and-package:
    runs-on: ubuntu-latest
    needs: verify-version
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Set up Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
            <servers>
              <server>
                <id>odm-spec-parser-repo</id>
                <username>your-github-username</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
              <server>
                <id>odm-cli-extensions-repo</id>
                <username>your-github-username</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>" > ~/.m2/settings.xml
      - name: Build JAR
        run: mvn clean package -DskipTests
      - name: Create package structure
        run: |
          mkdir odm-cli-linux odm-cli-windows
          cp target/odm-cli.jar odm-cli-linux/
          cp target/odm-cli.jar odm-cli-windows/
      - name: Download Portable JDKs
        run: |
          curl -L -o jdk-linux.tar.gz https://github.com/adoptium/temurin11-binaries/releases/latest/download/OpenJDK11U-jre_x64_linux.tar.gz
          curl -L -o jdk-windows.zip https://github.com/adoptium/temurin11-binaries/releases/latest/download/OpenJDK11U-jre_x64_windows.zip
          tar -xzf jdk-linux.tar.gz -C odm-cli-linux --strip-components=1
          unzip -q jdk-windows.zip -d odm-cli-windows
      - name: Create Linux Startup Script
        run: |
          cat << 'EOF' > odm-cli-linux/odm-cli
          #!/bin/bash
          DIR="$(cd "$(dirname "$0")" && pwd)"
          export JAVA_HOME="$DIR/jdk"
          export PATH="$JAVA_HOME/bin:$PATH"
          exec "$JAVA_HOME/bin/java" -jar "$DIR/odm-cli.jar" "$@"
          EOF
          chmod +x odm-cli-linux/odm-cli
      - name: Create Windows Startup Script
        run: |
          echo '@echo off' > odm-cli-windows/odm-cli.bat
          echo 'setlocal' >> odm-cli-windows/odm-cli.bat
          echo 'set DIR=%~dp0' >> odm-cli-windows/odm-cli.bat
          echo 'set JAVA_HOME=%DIR%\jdk' >> odm-cli-windows/odm-cli.bat
          echo 'set PATH=%JAVA_HOME%\bin;%PATH%' >> odm-cli-windows/odm-cli.bat
          echo '"%JAVA_HOME%\bin\java.exe" -jar "%DIR%\odm-cli.jar" %*' >> odm-cli-windows/odm-cli.bat
      - name: Package ZIP Files
        run: |
          zip -r odm-cli-linux.zip odm-cli-linux
          zip -r odm-cli-windows.zip odm-cli-windows
      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: odm-cli-packages
          path: |
            odm-cli-linux.zip
            odm-cli-windows.zip
          retention-days: 7
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Publish Maven package
        run: mvn -DskipTests -DGitHubPackages=true --batch-mode deploy
      - name: Download Packaged Artifacts
        uses: actions/download-artifact@v4
        with:
          name: odm-cli-packages
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            odm-cli-linux.zip
            odm-cli-windows.zip
